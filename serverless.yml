# Serverless Framework configuration for AWS Lambda deployment
# Alternative to manual deployment script

service: posso-react-agent

provider:
  name: aws
  runtime: python3.13
  profile: posso # Ensure using the right profile
  architecture: arm64  # Use ARM64 for better performance and cost
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-southeast-1'}  # Singapore region
  memorySize: 2048  # More memory for faster processing
  timeout: 30  # 30 seconds to match API Gateway limit
  
  environment:
    ENV: production
    # Environment variables from Parameter Store
    UPSTASH_VECTOR_REST_URL: ${ssm:/posso/upstash-vector-url}
    UPSTASH_VECTOR_REST_TOKEN: ${ssm:/posso/upstash-vector-token}
    REDIS_URL: ${ssm:/posso/redis-url}
    OPENROUTER_API_KEY: ${ssm:/posso/openrouter-key}
    MODEL_NAME: ${ssm:/posso/model-name, 'openai/gpt-4o-mini'}
    RESPONSE_CRAFTING_MODEL: ${ssm:/posso/response-crafting-model, 'meta-llama/llama-4-maverick'}
    CHATWOOT_API_URL: ${ssm:/posso/chatwoot-api-url, 'https://app.chatwoot.com'}
    CHATWOOT_API_KEY: ${ssm:/posso/chatwoot-key}
    CHATWOOT_ACCOUNT_ID: ${ssm:/posso/chatwoot-account-id}
    PIPEDRIVE_API_URL: ${ssm:/posso/pipedrive-api-url, 'https://api.pipedrive.com/v1'}
    PIPEDRIVE_APIV2_URL: ${ssm:/posso/pipedrive-apiv2-url, 'https://api.pipedrive.com'}
    PIPEDRIVE_API_KEYS_JSON: ${ssm:/posso/pipedrive-api-keys}
    LANGCHAIN_TRACING_V2: ${ssm:/posso/langchain-tracing, 'false'}
    LANGCHAIN_API_KEY: ${ssm:/posso/langchain-key, ''}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"

functions:
  webhook:
    handler: lambda_handler.lambda_handler
    name: ${self:service}-${self:provider.stage}-webhook
    description: Posso ReAct School Chatbot webhook handler
    
    events:
      - http:
          path: webhook
          method: post
          cors: false

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    dockerImage: public.ecr.aws/sam/build-python3.13:latest-arm64  # ARM64 build image
    fileName: lambda_requirements.txt
    slim: true
    strip: false
    useDownloadCache: false
    useStaticCache: false

package:
  include:
    - lambda_handler.py
    - message_handler.py
    - config/**
    - context/**
    - agents/**
    - tools/**
    - models/**
    - integrations/**
    # - data/**  # Not needed since using Upstash Vector
  exclude:
    - .git/**
    - __pycache__/**
    - "*.pyc"
    - tests/**
    - scripts/**
    - data/**  # FAQ files not needed (using Upstash Vector)
    - docker-compose*.yml
    - Dockerfile
    - requirements.txt  # Use lambda_requirements.txt instead
    - .env  # Environment variables (extra safety)
    - .env.example
    - README.md
    - docs/**